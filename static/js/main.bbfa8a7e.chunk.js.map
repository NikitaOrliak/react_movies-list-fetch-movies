{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","setMovie","inputTitle","setInputTitle","query","setQuery","loading","setLoading","error","setError","useEffect","fetch","then","res","json","catch","Response","Error","getMovie","response","newMovie","Title","Plot","Poster","imdbID","toString","updateMovie","finally","handleSubmit","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","onClick","disabled","findIndex","currentMovie","App","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbfa8a7e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n// import { MovieData } from '../../types/MovieData';\n// import { ResponseError } from '../../types/ReponseError';\n\ntype EventSubmitType\n  = React.MouseEvent<HTMLButtonElement, MouseEvent>\n  | React.FormEvent<HTMLFormElement>;\n\ninterface Props {\n  movies: Movie[],\n  addMovie: (movie: Movie) => void;\n}\n\nconst defaultImageUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  addMovie = () => {},\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [inputTitle, setInputTitle] = useState('');\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const generateImgUrl = (imgUrl: string) => {\n    return imgUrl === 'N/A' ? defaultImageUrl : imgUrl;\n  };\n\n  const updateMovie = (response: MovieData | ResponseError) => {\n    if ('Error' in response) {\n      setError(true);\n\n      return;\n    }\n\n    const newMovie = {\n      title: response.Title,\n      description: response.Plot,\n      imgUrl: generateImgUrl(response.Poster),\n      imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n      imdbId: response.imdbID.toString(),\n    };\n\n    setMovie(newMovie);\n  };\n\n  useEffect(() => {\n    if (query) {\n      setLoading(true);\n\n      getMovie(query)\n        .then(response => updateMovie(response))\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [query]);\n\n  const handleSubmit = (event: EventSubmitType) => {\n    event.preventDefault();\n\n    setQuery(inputTitle);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(event.target.value);\n    setError(false);\n  };\n\n  const reset = () => {\n    setInputTitle('');\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleAddMovieClick = () => {\n    if (movie) {\n      const hasMovie = movies.findIndex(currentMovie => currentMovie.imdbId === movie.imdbId);\n\n      if (hasMovie === -1) {\n        addMovie(movie);\n      }\n\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={inputTitle}\n              onChange={handleChange}\n            />\n          </div>\n\n          {\n            error && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loading,\n              })}\n              onClick={handleSubmit}\n              disabled={!inputTitle}\n            >\n              Find a movie\n            </button>\n          </div>\n          {\n            movie && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleAddMovieClick}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n        {\n          movie && (\n            <div className=\"container\" data-cy=\"previewContainer\">\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard movie={movie} />\n            </div>\n          )\n        }\n      </form>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=824f063e';\n// https://www.omdbapi.com/?i=tt3896198&apikey=824f063e\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}